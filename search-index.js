var searchIndex = new Map(JSON.parse('[["chai",{"t":"PPPPPPPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONCOCNNNNONCNNNNNNNNNNNNNNNNNNNNNNNNNNNONONNCCNCONNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNOOOMNNGFFFNGNKONONNOFPFPFPPFPFPFFFPGFFPPIFGPFFGGFFFFFIPPFPPGPFGPGGFPGPPPOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOONOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONOOOOOOOOOOOONOOOOOOOOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOFOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNOONOONNNNNNNOOOONONNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOIIOIOONNNOFIOOIOFOOIOONOFNNSSONIFOOIFIOOOOOOFOIIOFONNNNNNNNNOOONNNNNNNNNCONNNNONNNNONOONOOONNNNNNNNNNOONNNNFMKFFNNNNNNNNNNFCCCKMFNNNNNNNNNNNNNNNNNPPIFGPPNNNNNNNNNNNNONNNONNNNONNNNNNNNNNNNNNNNFIIFFFFFFONNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNOOOOONNNNNNNNNOONNNNNNHHNNNNNNOOOOOOOOOONNNNNONNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNOOCKMKMSNNNNNNNNNNNNNOOONNNNNNNNNNNFNNNNFNNNNNNOOOOONNNNCNNNOOCNNNNNNNNNNNNMKFFJOOOONOOOFNNNONONOONNNNNFNNNNNNNNNNNNNNNNNNOOONNOOONNNNNNNNONNNNFFOOOOOOOOOOOO","n":["BetterSolution","Elapsed","Encode","Optimize","Parameters","Progress","TrialMax","TrialMin","Web","augment_args","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","","","","","","","borrow_mut","","","","","","","clone","","","","clone_into","","","","clone_to_uninit","","","","command","","command_for_update","config","","data","default","describe","describe_vector","deserialize","encodables","encode_evaluate","encoders","fmt","","from","","","","","","","","","from_abi","from_arg_matches","","from_arg_matches_mut","","group_id","has_subcommand","into","","","","","","","into_abi","is_none","key_distribution","long_ref_from_abi","message","new","none","objectives","operators","optimize","optimizers","pair_equivalence","ref_from_abi","ref_mut_from_abi","return_abi","serialize","","sync","threads","to_owned","","","","try_from","","","","","","","try_from_js_value","try_into","","","","","","","type_id","","","","","","","update_from_arg_matches","","update_from_arg_matches_mut","","validate","vector_from_abi","vector_into_abi","vector_into_jsvalue","vzip","","","","","","","准备数据","原始当量信息","原始键位分布信息","参数","发送","","","命令","命令行","命令行参数","图形界面参数","新建","消息","生成子命令行","界面","词列表","读取","输出目录","输出编码结果","输出评测指标","配置","错误","Advanced","Analysis","Ascii","AtomicConstraint","Basic","BasicComponent","Block","C","CodableObjectConfig","Compound","ConstraintsConfig","Data","Degenerator","DerivedComponent","Draw","EdgeConfig","EncoderConfig","Equal","EqualRule","FingeringWeights","FormConfig","Glyph","H","Info","LevelWeights","Mapped","MappedKey","NodeConfig","ObjectiveConfig","OptimizationConfig","PartialWeights","PrimitiveCharacter","PrimitiveRepertoire","Range","RangeRule","Reading","Reference","ReferenceStroke","Rule","SVGStroke","Scheme","ShortCodeConfig","SimulatedAnnealing","SolverConfig","Stroke","TierWeights","V","WordRule","Xform","Xlit","Z","algebra","alphabet","ambiguous","analysis","author","auto_select_length","auto_select_pattern","borrow","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","character_set","characters_full","characters_short","classifier","clone","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_to_uninit","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","conditions","constraints","count","customize","data","default","degenerator","description","deserialize","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","duplication","","element","element_indices","elements","encoder","extended_pair_equivalence","feature","fingering","","","fmt","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","form","frequency","from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gb2312","gf0014_id","glyph_customization","glyphs","grouping","importance","index","","","indices","info","into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","key","key_distribution","keys","length","","levels","","mapping","mapping_type","max_length","metaheuristic","name","","negative","next","no_cross","normalize","object","","objective","operator","optimization","pair_equivalence","pinyin","positive","prefix","priority_short_codes","reading_customization","readings","repertoire","rootIndex","rules","select_keys","","selector","serialize","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","serializer","short_code","source","sources","strokeIndex","strokes","strong","subtype","tags","tiers","to_owned","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","top","try_from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","tygf","type","type_id","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","unicode","value","version","","vzip","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","weak","words_full","words_short","配置","parameterList","","","","operandList","operator","order","source","strokes","","tags","","","element","index","from","","to","","length_equal","length_in_range","schemes","","curveList","feature","","index","start","formula","","length_equal","length_in_range","assemble","borrow","","","","","","","borrow_mut","","","","","","","clone","","","","","","clone_into","","","","","","clone_to_uninit","","","","","","default","deserialize","","fmt","","","","","","","frequency","from","","","","","","","full","full_rank","get_space","gt_penalty","ideal","into","","","","","","","level","lt_penalty","name","","new","sequence","serialize","","","short","short_rank","to_owned","","","","","","try_from","","","","","","","try_into","","","","","","","type_id","","","","","","","vzip","","","","","","","上一个实际编码","上一个选重标记","元素","元素序列","","元素映射","元素转数字","全码","写入","写入编码","写入选重","初始映射","原始可编码对象","原始当量信息","原始编码","原始编码候选位置","原始键位分布信息","原始顺序","可编码对象","名称","实际编码","当量信息","","数字转元素","数字转编码","数字转键","数据","新建","更新配置","最大按键组合长度","最大词长","有变化","生成码表","用指标记","码表项","简码","简码等级","编码","编码信息","自动上屏","词列表","词长","","进制","选择键","选重标记","部分编码信息","配置","键","键位分布信息","","键位分布损失函数","键转数字","预处理字母表","预处理当量信息","预处理指法标记","预处理映射","预处理简码规则","预处理简码配置","预处理自动上屏","预处理词列表","预处理键位分布信息","频率","","auto_select","borrow","","","borrow_mut","","","clone","clone_into","clone_to_uninit","default","first_key","fmt","from","","","hashmap","insert","into","","","max_length","new","prefix","radix","rank","select_keys","","short_code","to_owned","try_from","","","try_into","","","type_id","","","vector","vector_length","vzip","","","wrap_actual","简码配置","编码","编码器","编码空间","编码配置","borrow","borrow_mut","from","into","try_from","try_into","type_id","vzip","新建","编码","默认编码器","cache","default","metric","目标函数","计算","Cache","accumulate","borrow","borrow_mut","clone","clone_into","clone_to_uninit","finalize","fmt","from","into","new","process","to_owned","try_from","try_into","type_id","vzip","CharactersFull","CharactersShort","Frequencies","Parameters","PartialType","WordsFull","WordsShort","borrow","","","borrow_mut","","","clone","","clone_into","","clone_to_uninit","","fingering_types","from","","","ideal_distribution","into","","","is_characters","pair_equivalence","to_owned","","try_from","","","try_into","","","type_id","","","vzip","","","新建","计算","默认目标函数","FingeringMetric","FingeringMetricUniform","FingeringTypes","LevelMetric","LevelMetricUniform","Metric","PartialMetric","TierMetric","awkward_upside_down","borrow","","","","","","borrow_mut","","","","","","characters_full","characters_short","clone","","","","","clone_into","","","","","clone_to_uninit","","","","","deserialize","","","","","duplication","","extended_pair_equivalence","fingering","","fmt","","","","","","","","","frequency","","from","","","","","","get_fingering_types","get_partial_fingering_types","into","","","","","","key_distribution","length","","levels","","little_finger_interference","pair_equivalence","same_finger_large_jump","same_finger_small_jump","same_hand","serialize","","","","","tiers","to_owned","","","","","to_string","","","top","try_from","","","","","","try_into","","","","","","type_id","","","","","","vzip","","","","","","words_full","words_short","default","变异","","杂交","","DEFAULT_MUTATE","borrow","","borrow_mut","","clone","clone_into","clone_to_uninit","deserialize","fmt","from","","into","","random_full_key_swap","random_move","random_swap","serialize","to_owned","try_from","","try_into","","type_id","","vzip","","变异","变异配置","新建","有约束的整键随机交换","有约束的随机交换","有约束的随机移动","默认操作","borrow","","","borrow_mut","","","encode_assembly","encode_duplicate","encode_init","encode_reset","encode_short","fmt","from","","","genetic","into","","","objective_accept","objective_accumulate","simulated_annealing","try_from","","","try_into","","","type_id","","","vzip","","","优化","优化方法","优化结果","优化问题","全局计时器","分数","指标","操作","数据","新建","映射","目标函数","编码器","计时器","计算","borrow","borrow_mut","crossover_rate","from","generations","into","mutation_rate","population_size","try_from","try_into","type_id","vzip","优化","遗传算法","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","deserialize","","fmt","","from","","into","","parameters","report_after","search_method","serialize","","steps","t_max","t_min","to_owned","","try_from","","try_into","","type_id","","update_interval","vzip","","优化","调参","退火方法","降温时间表","accept_rate","config","improve_rate","metric","","save","steps","t_max","t_min","temperature","",""],"q":[[0,"chai"],[159,"chai::config"],[759,"chai::config::Draw"],[763,"chai::config::Glyph"],[772,"chai::config::MappedKey"],[774,"chai::config::Rule"],[778,"chai::config::ShortCodeConfig"],[782,"chai::config::Stroke"],[787,"chai::config::WordRule"],[791,"chai::data"],[963,"chai::encoders"],[1013,"chai::encoders::default"],[1024,"chai::objectives"],[1029,"chai::objectives::cache"],[1047,"chai::objectives::default"],[1093,"chai::objectives::metric"],[1217,"chai::operators"],[1222,"chai::operators::default"],[1256,"chai::optimizers"],[1305,"chai::optimizers::genetic"],[1319,"chai::optimizers::simulated_annealing"],[1360,"chai::消息"],[1372,"clap_builder::builder::command"],[1373,"core::result"],[1374,"serde::de"],[1375,"wasm_bindgen"],[1376,"core::fmt"],[1377,"alloc::string"],[1378,"clap_builder::parser::matches::arg_matches"],[1379,"clap_builder"],[1380,"clap_builder::util::id"],[1381,"core::option"],[1382,"js_sys"],[1383,"serde::ser"],[1384,"core::any"],[1385,"alloc::boxed"],[1386,"std::path"],[1387,"alloc::vec"],[1388,"rustc_hash"]],"i":"Cf0n01111`l011Cnhj5Ah453216045214521452145444`4`100140`21322216045045454532160450040200``0`40001604214532160450321604532160454545`00032160453113Db41````4`4`244442`Fh`Ff`1Eh`Eb`1```1```GbGf```2``````````10`4Ed`0``Hd```4`Fb05HhFdEl2DnFj01E`;8Ef=Ej5EnF`:8FfFh7FlFnG`GbGdGfGhGjGlGnH`HbHdHfHhDnE`EbEdEfEhEjElEnF`FbFdFfFhFjFlFnG`GbGdGfGhGjGlGnH`HbHdHfHhE`66EnDn2EbEdEfEhEjEl7F`FbFdFfFhFjFlFnG`GbGdGfGhGjGlGnH`HbHdHfHhDnE`EbEdEfEhEjElEnF`FbFdFfFhFjFlFnG`GbGdGfGhGjGlGnH`HbHdHfHhDnE`EbEdEfEhEjElEnF`FbFdFfFhFjFlFnG`GbGdGfGhGjGlGnH`HbHdHfHh?1:En110Dn0E`EbEdEfEhEjEl8F`FbFdFfFhFjFlFnG`GbGdGfGhGjGlGnH`HbHdHfHh7643306F`876DnE`EbEdEfEhEjElEn9FbFdFfFhFjFlFnG`GbGdGfGhGjGlGnH`HbHdHfHh08DnE`EbEdEfEhEjElEnF`FbFdFfFhFjFlFnG`GbGdGfGhGjGlGnH`HbHdHfHhEl0E`1FdEjEfFn:96Dn5EbEd4Eh69EnF`Fb:FfFhFjFl;G`GbGdGfGhGjGlGnH`HbHdHfHh=64?876Fd0?2DnEl?FnF`Fh2G`807=Ej1GdFjE`80Fl223En;2EbEdEfEh9>4<FbFdFf>:8Fn>Gb=GfGhGjGlGnH`HbHdHfHhEnFj20FlEf31E`;Dn1EbEd4EhEjEl:F`FbFdFfFh>=FnG`GbGdGfGhGjGlGnH`HbHdHfHh7DnE`EbEdEfEhEjElEnF`FbFdFfFhFjFlFnG`GbGdGfGhGjGlGnH`HbHdHfHhDnE`EbEdEfEhEjElEnF`FbFdFfFhFjFlFnG`GbGdGfGhGjGlGnH`HbHdHfHhEl?DnE`EbEdEfEhEj7EnF`FbFdFfFhFjFlFnG`GbGdGfGhGjGlGnH`HbHdHfHhEl=Dn20E`EbEdEfEhEj7EnF`FbFdFfFhFjFlFnG`GbGdGfGhGjGlGnH`HbHdHfHhEn66`NdNfNhNjNl00NnO`1012Ob0OdOf10OhOj10Ol0On01A@`A@b10D`HjHlHnI`IbDh6543210654321654321654321625454321065543210600644543210654501554000543216543210654321065432106543210622``3`612226``22`3`32`6666`66``26``13```631662`6``6`666666666631Kb0K`Jl210111`2021011210220212021210210210112102`Kd```Kf000000000`````Kh`Kj0000000000000000Ld0```000LbKl21010101002100210201021021021021011`````````Ll0LfLhLjL`Dl54321000432104321043210432102112154322110043543210``543210143215155543210143210210254321054321054321054321000``Ln`M``MdMb1000000101000000101010101`1111`MlMjMf210000000210`21000`210210210210Mh````33222322`2Mn000000000000`N`Nb1010101010101010000101111010101001000``A@dA@fA@hA@j220A@l0421","f":"`````````{bb}000{d{{d{c}}}{}}000000{{{d{f}}}{{d{fc}}}{}}000000{{{d{h}}}h}{{{d{j}}}j}{{{d{l}}}l}{{{d{n}}}n}{{d{d{fc}}}A`{}}000{{dAb}A`}000{{}b}`0```{{}j}{{}A`}0{c{{Ad{j}}}Af}`{{{d{Ah}}Aj}{{Ad{AjAl}}}}`{{{d{h}}{d{fAn}}}B`}{{{d{j}}{d{fAn}}}B`}{cc{}}0{Bbh}{{{d{Bd}}}h}22222{BfAh}{{{d{Bh}}}{{Ad{lBj}}}}{{{d{Bh}}}{{Ad{nBj}}}}{{{d{fBh}}}{{Ad{lBj}}}}{{{d{fBh}}}{{Ad{nBj}}}}{{}{{Bn{Bl}}}}{{{d{Bd}}}C`}{{}c{}}000000{AhBf}{{{d{c}}}C`{}}`{ce{}{}}`{CbAh}{{}c{}}``{{{d{Ah}}}{{Ad{A`Al}}}}``{ce{}{}}{ce{}{}}{{}}{{{d{j}}c}AdCd}{{{d{Cf}}c}AdCd}{{{d{fAh}}Aj}{{Ad{A`Al}}}}`{dc{}}000{c{{Ad{e}}}{}{}}000000{Aj{{Ad{Ahc}}}{}}{{}{{Ad{c}}}{}}000000{dCh}000000{{{d{fl}}{d{Bh}}}{{Ad{A`Bj}}}}{{{d{fn}}{d{Bh}}}{{Ad{A`Bj}}}}{{{d{fl}}{d{fBh}}}{{Ad{A`Bj}}}}{{{d{fn}}{d{fBh}}}{{Ad{A`Bj}}}}{Aj{{Ad{AjAl}}}}{c{{Cl{{Cj{Ah}}}}}{}}{{{Cl{{Cj{Ah}}}}}c{}}{{{Cl{{Cj{Ah}}}}}Aj}{{}c{}}000000{{{d{Cn}}}D`}```{{{d{Db}}Cf}A`}{{{d{Cn}}Cf}A`}{{{d{Ah}}Cf}A`}````{{l{Bn{Dd}}}Cn}`{{{d{Cn}}Df}Cn}``{{{d{Bd}}}D`}`{{{d{Cn}}{Dj{Dh}}}A`}{{{d{Cn}}Dl}A`}````````````````````````````````````````````````````````````{d{{d{c}}}{}}00000000000000000000000000000{{{d{f}}}{{d{fc}}}{}}00000000000000000000000000000````{{{d{Dn}}}Dn}{{{d{E`}}}E`}{{{d{Eb}}}Eb}{{{d{Ed}}}Ed}{{{d{Ef}}}Ef}{{{d{Eh}}}Eh}{{{d{Ej}}}Ej}{{{d{El}}}El}{{{d{En}}}En}{{{d{F`}}}F`}{{{d{Fb}}}Fb}{{{d{Fd}}}Fd}{{{d{Ff}}}Ff}{{{d{Fh}}}Fh}{{{d{Fj}}}Fj}{{{d{Fl}}}Fl}{{{d{Fn}}}Fn}{{{d{G`}}}G`}{{{d{Gb}}}Gb}{{{d{Gd}}}Gd}{{{d{Gf}}}Gf}{{{d{Gh}}}Gh}{{{d{Gj}}}Gj}{{{d{Gl}}}Gl}{{{d{Gn}}}Gn}{{{d{H`}}}H`}{{{d{Hb}}}Hb}{{{d{Hd}}}Hd}{{{d{Hf}}}Hf}{{{d{Hh}}}Hh}{{d{d{fc}}}A`{}}00000000000000000000000000000{{dAb}A`}00000000000000000000000000000`````{{}Hh}``{c{{Ad{Dn}}}Af}{c{{Ad{E`}}}Af}{c{{Ad{Eb}}}Af}{c{{Ad{Ed}}}Af}{c{{Ad{Ef}}}Af}{c{{Ad{Eh}}}Af}{c{{Ad{Ej}}}Af}{c{{Ad{El}}}Af}{c{{Ad{En}}}Af}{c{{Ad{F`}}}Af}{c{{Ad{Fb}}}Af}{c{{Ad{Fd}}}Af}{c{{Ad{Ff}}}Af}{c{{Ad{Fh}}}Af}{c{{Ad{Fj}}}Af}{c{{Ad{Fl}}}Af}{c{{Ad{Fn}}}Af}{c{{Ad{G`}}}Af}{c{{Ad{Gb}}}Af}{c{{Ad{Gd}}}Af}{c{{Ad{Gf}}}Af}{c{{Ad{Gh}}}Af}{c{{Ad{Gj}}}Af}{c{{Ad{Gl}}}Af}{c{{Ad{Gn}}}Af}{c{{Ad{H`}}}Af}{c{{Ad{Hb}}}Af}{c{{Ad{Hd}}}Af}{c{{Ad{Hf}}}Af}{c{{Ad{Hh}}}Af}```````````{{{d{Dn}}{d{fAn}}}B`}{{{d{E`}}{d{fAn}}}B`}{{{d{Eb}}{d{fAn}}}B`}{{{d{Ed}}{d{fAn}}}B`}{{{d{Ef}}{d{fAn}}}B`}{{{d{Eh}}{d{fAn}}}B`}{{{d{Ej}}{d{fAn}}}B`}{{{d{El}}{d{fAn}}}B`}{{{d{En}}{d{fAn}}}B`}{{{d{F`}}{d{fAn}}}B`}{{{d{Fb}}{d{fAn}}}B`}{{{d{Fd}}{d{fAn}}}B`}{{{d{Ff}}{d{fAn}}}B`}{{{d{Fh}}{d{fAn}}}B`}{{{d{Fj}}{d{fAn}}}B`}{{{d{Fl}}{d{fAn}}}B`}{{{d{Fn}}{d{fAn}}}B`}{{{d{G`}}{d{fAn}}}B`}{{{d{Gb}}{d{fAn}}}B`}{{{d{Gd}}{d{fAn}}}B`}{{{d{Gf}}{d{fAn}}}B`}{{{d{Gh}}{d{fAn}}}B`}{{{d{Gj}}{d{fAn}}}B`}{{{d{Gl}}{d{fAn}}}B`}{{{d{Gn}}{d{fAn}}}B`}{{{d{H`}}{d{fAn}}}B`}{{{d{Hb}}{d{fAn}}}B`}{{{d{Hd}}{d{fAn}}}B`}{{{d{Hf}}{d{fAn}}}B`}{{{d{Hh}}{d{fAn}}}B`}``{cc{}}00000000000000000000000000000```````````{{}c{}}00000000000000000000000000000```{{{d{Fh}}}Df}````````````{{{d{Fh}}}{{Dj{Ff}}}}``````````````````{{{d{Dn}}c}AdCd}{{{d{E`}}c}AdCd}{{{d{Eb}}c}AdCd}{{{d{Ed}}c}AdCd}{{{d{Ef}}c}AdCd}{{{d{Eh}}c}AdCd}{{{d{Ej}}c}AdCd}{{{d{El}}c}AdCd}{{{d{En}}c}AdCd}{{{d{F`}}c}AdCd}{{{d{Fb}}c}AdCd}{{{d{Fd}}c}AdCd}{{{d{Ff}}c}AdCd}{{{d{Fh}}c}AdCd}{{{d{Fj}}c}AdCd}{{{d{Fl}}c}AdCd}{{{d{Fn}}c}AdCd}{{{d{G`}}c}AdCd}{{{d{Gb}}c}AdCd}{{{d{Gd}}c}AdCd}{{{d{Gf}}c}AdCd}{{{d{Gh}}c}AdCd}{{{d{Gj}}c}AdCd}{{{d{Gl}}c}AdCd}{{{d{Gn}}c}AdCd}{{{d{H`}}c}AdCd}{{{d{Hb}}c}AdCd}{{{d{Hd}}c}AdCd}{{{d{Hf}}c}AdCd}{{{d{Hh}}c}AdCd}``````````{dc{}}00000000000000000000000000000`{c{{Ad{e}}}{}{}}00000000000000000000000000000{{}{{Ad{c}}}{}}00000000000000000000000000000``{dCh}00000000000000000000000000000````{{}c{}}00000000000000000000000000000````````````````````````````````````{{{d{Bb}}Df}Bb}{d{{d{c}}}{}}000000{{{d{f}}}{{d{fc}}}{}}000000{{{d{Hj}}}Hj}{{{d{Hl}}}Hl}{{{d{Hn}}}Hn}{{{d{I`}}}I`}{{{d{Ib}}}Ib}{{{d{D`}}}D`}{{d{d{fc}}}A`{}}00000{{dAb}A`}00000{{}I`}{c{{Ad{Hj}}}Af}{c{{Ad{Hl}}}Af}{{{d{Hj}}{d{fAn}}}B`}{{{d{Hl}}{d{fAn}}}B`}{{{d{Hn}}{d{fAn}}}B`}{{{d{I`}}{d{fAn}}}B`}{{{d{Ib}}{d{fAn}}}B`}{{{d{Dh}}{d{fAn}}}B`}{{{d{D`}}{d{fAn}}}B`}`{cc{}}000000``{{{d{D`}}}Df}``{{}c{}}000000````{{{d{Hn}}}Ib}`{{{d{Hj}}c}AdCd}{{{d{Hl}}c}AdCd}{{{d{Dh}}c}AdCd}``{dc{}}00000{c{{Ad{e}}}{}{}}000000{{}{{Ad{c}}}{}}000000{dCh}000000{{}c{}}000000````````{{{d{fI`}}IdC`}A`}{{{d{fI`}}Id}A`}{{{d{fI`}}C`}A`}`````````````{{IdIf{d{{Il{IhIj}}}}}{{Dj{Ij}}}}``{{Hh{Dj{Hj}}InJ`}{{Ad{D`h}}}}{{{d{D`}}{d{Jb}}}Hh}```{{{d{D`}}{d{{Cj{Ib}}}}}{{Dj{Dh}}}}````````````````````{{{d{Hh}}}{{Ad{{Jd{If{Dj{Ih}}{Il{IjIh}}{Il{IhIj}}}}h}}}}{{{d{J`}}DfIf{d{{Il{IhIj}}}}}{{Dj{Jf}}}}{{{d{D`}}}{{Dj{Jh}}}}{{{d{Hh}}{d{{Il{IjIh}}}}If}{{Ad{{Jd{Jb{Il{BbJj}}{Il{JjBb}}}}h}}}}{{{d{D`}}{d{{Dj{Gd}}}}}{{Ad{{Dj{Jl}}h}}}}{{{d{D`}}{Dj{Gb}}}{{Ad{{Jn{{Dj{Jl}}}}h}}}}{{{d{D`}}}{{Ad{{Dj{C`}}h}}}}{{{Dj{Hj}}Df{d{{Il{BbJj}}}}}{{Ad{{Dj{Hn}}h}}}}{{{d{In}}If{d{{Il{IhIj}}}}}{{Dj{Hl}}}}```{d{{d{c}}}{}}00{{{d{f}}}{{d{fc}}}{}}00{{{d{K`}}}K`}{{d{d{fc}}}A`{}}{{dAb}A`}``{{{d{Jl}}{d{fAn}}}B`}{cc{}}00`{{{d{fK`}}If}A`}{{}c{}}00`{{{d{D`}}}{{Ad{Kbh}}}}``{{{d{K`}}If}Ab}```{dc{}}{c{{Ad{e}}}{}{}}00{{}{{Ad{c}}}{}}00{dCh}00``{{}c{}}00{{{d{Kb}}IfAbIf}If}`{{{d{fKd}}{d{Jb}}{d{{Bn{{Dj{Jj}}}}}}}{{d{f{Dj{Ib}}}}}}```{d{{d{c}}}{}}{{{d{f}}}{{d{fc}}}{}}=;7654{{{d{D`}}}{{Ad{Kfh}}}}{{{d{fKf}}{d{Jb}}{d{{Bn{{Dj{Jj}}}}}}}{{d{f{Dj{Ib}}}}}}`````{{{d{fKh}}{d{f{Cj{Ib}}}}}{{Jd{DlJf}}}}`{{{d{fKj}}DfIfIdC`{d{Kl}}Kn}A`}54{{{d{Kj}}}Kj}{{d{d{fc}}}A`{}}{{dAb}A`}{{{d{Kj}}{d{Kl}}}{{Jd{L`Jf}}}}{{{d{Kj}}{d{fAn}}}B`}{cc{}}{{}c{}}{{{d{Gl}}IfDfIf}Kj}{{{d{fKj}}DfIf{d{fI`}}{d{Kl}}}A`}{dc{}}{c{{Ad{e}}}{}{}}{{}{{Ad{c}}}{}}{dCh}{{}c{}}```````{d{{d{c}}}{}}00{{{d{f}}}{{d{fc}}}{}}00{{{d{Lb}}}Lb}{{{d{Kl}}}Kl}{{d{d{fc}}}A`{}}0{{dAb}A`}0`>>>`==={{{d{Ld}}}C`}`;;:::999888777{{{d{D`}}}{{Ad{Lbh}}}}{{{d{fLb}}{d{f{Cj{Ib}}}}}{{Jd{DlJf}}}}``````````888888777777``{{{d{Lf}}}Lf}{{{d{Lh}}}Lh}{{{d{Lj}}}Lj}{{{d{L`}}}L`}{{{d{Dl}}}Dl}9999988888{c{{Ad{Lf}}}Af}{c{{Ad{Lh}}}Af}{c{{Ad{Lj}}}Af}{c{{Ad{L`}}}Af}{c{{Ad{Dl}}}Af}`````{{{d{Ll}}{d{fAn}}}B`}{{{d{Lf}}{d{fAn}}}B`}{{{d{Lh}}{d{fAn}}}B`}{{{d{Lj}}{d{fAn}}}B`}0{{{d{L`}}{d{fAn}}}B`}0{{{d{Dl}}{d{fAn}}}B`}0``{cc{}}00000{{}Ll}{{{d{{Jn{{Dj{Ij}}}}}}}Ll}{{}c{}}00000``````````{{{d{Lf}}c}AdCd}{{{d{Lh}}c}AdCd}{{{d{Lj}}c}AdCd}{{{d{L`}}c}AdCd}{{{d{Dl}}c}AdCd}`{dc{}}0000{dBb}00`{c{{Ad{e}}}{}{}}00000{{}{{Ad{c}}}{}}00000{dCh}00000{{}c{}}00000````{{{d{fLn}}{d{fJb}}}{{Dj{Jj}}}}`{{{d{fM`}}{d{Jb}}{d{Jb}}}Jb}`{d{{d{c}}}{}}0{{{d{f}}}{{d{fc}}}{}}0{{{d{Mb}}}Mb}{{d{d{fc}}}A`{}}{{dAb}A`}{c{{Ad{Mb}}}Af}{{{d{Mb}}{d{fAn}}}B`}{cc{}}0{{}c{}}0```{{{d{Mb}}c}AdCd}{dc{}}{c{{Ad{e}}}{}{}}0{{}{{Ad{c}}}{}}0{dCh}0{{}c{}}0{{{d{fMd}}{d{fJb}}}{{Dj{Jj}}}}`{{{d{D`}}}{{Ad{Mdh}}}}{{{d{Md}}{d{fJb}}}{{Dj{Jj}}}}00`{d{{d{c}}}{}}00{{{d{f}}}{{d{fc}}}{}}00`````{{{d{Mf}}{d{fAn}}}B`}===`<<<```999888777666{{{d{Mh}}{d{f{Mj{ceg}}}}{d{Db}}}MlKdKh{}}````````{{D`ceg}{{Mj{ceg}}}KdKh{}}````{{{d{f{Mj{ceg}}}}{d{Jb}}{d{{Bn{{Dj{Jj}}}}}}}{{Jd{DlJf}}}KdKh{}}54`{cc{}}`{{}c{}}``>=<;{{{d{Mn}}{d{f{Mj{ceg}}}}{d{Db}}}MlKdKh{LnM`}}`8877{{{d{N`}}}N`}{{{d{Nb}}}Nb}{{d{d{fc}}}A`{}}0{{dAb}A`}0{c{{Ad{N`}}}Af}{c{{Ad{Nb}}}Af}{{{d{N`}}{d{fAn}}}B`}{{{d{Nb}}{d{fAn}}}B`}::99```{{{d{N`}}c}AdCd}{{{d{Nb}}c}AdCd}```{dc{}}0{c{{Ad{e}}}{}{}}0{{}{{Ad{c}}}{}}0{dCh}0`{{}c{}}0{{{d{Nb}}{d{f{Mj{ceg}}}}{d{Db}}}MlKdKhLn}{{{d{Nb}}{d{f{Mj{ceg}}}}{d{Db}}}N`KdKhLn}``````````````","D":"AGh","p":[[5,"Command",1372],[1,"reference",null,null,1],[0,"mut"],[5,"错误",0],[5,"图形界面参数",0],[5,"命令行参数",0],[6,"命令",0],[1,"unit"],[1,"u8"],[6,"Result",1373,null,1],[10,"Deserializer",1374],[5,"Web",0],[5,"JsValue",1375],[5,"JsError",1375],[5,"Formatter",1376],[8,"Result",1376],[5,"String",1377],[1,"str"],[1,"u32"],[5,"ArgMatches",1378],[8,"Error",1379],[5,"Id",1380],[6,"Option",1381,null,1],[1,"bool"],[5,"Function",1382],[10,"Serializer",1383],[6,"消息",0],[5,"TypeId",1384],[1,"slice"],[5,"Box",1385,null,1],[5,"命令行",0],[5,"数据",791],[10,"界面",0],[5,"PathBuf",1386],[1,"usize"],[5,"码表项",791],[5,"Vec",1387],[5,"Metric",1093],[5,"Info",159],[5,"Data",159],[6,"Draw",159],[6,"Stroke",159],[5,"Block",159],[6,"Glyph",159],[5,"Reading",159],[5,"PrimitiveCharacter",159],[5,"Analysis",159],[5,"Degenerator",159],[6,"Rule",159],[5,"FormConfig",159],[6,"MappedKey",159],[6,"Mapped",159],[5,"EncoderConfig",159],[5,"CodableObjectConfig",159],[5,"NodeConfig",159],[5,"EdgeConfig",159],[6,"ShortCodeConfig",159],[5,"Scheme",159],[6,"WordRule",159],[5,"LevelWeights",159],[5,"TierWeights",159],[5,"PartialWeights",159],[5,"ObjectiveConfig",159],[5,"AtomicConstraint",159],[5,"ConstraintsConfig",159],[6,"SolverConfig",159],[5,"OptimizationConfig",159],[5,"配置",159],[5,"原始可编码对象",791],[5,"键位分布损失函数",791],[5,"可编码对象",791],[5,"部分编码信息",791],[5,"编码信息",791],[8,"编码",791],[1,"u64"],[8,"键",791],[1,"char"],[8,"FxHashMap",1388],[8,"原始键位分布信息",791],[8,"原始当量信息",791],[8,"元素映射",791],[1,"tuple",null,null,1],[1,"f64"],[8,"用指标记",791],[8,"元素",791],[5,"简码配置",963],[1,"array"],[5,"编码空间",963],[5,"编码配置",963],[10,"编码器",963],[5,"默认编码器",1013],[10,"目标函数",1024],[5,"Cache",1029],[5,"Parameters",1047],[1,"i64"],[5,"PartialMetric",1093],[5,"默认目标函数",1047],[6,"PartialType",1047],[5,"LevelMetric",1093],[5,"LevelMetricUniform",1093],[5,"TierMetric",1093],[5,"FingeringTypes",1093],[10,"变异",1217],[10,"杂交",1217],[5,"变异配置",1222],[5,"默认操作",1222],[5,"计时器",1256],[10,"优化方法",1256],[5,"优化问题",1256],[5,"优化结果",1256],[5,"遗传算法",1305],[5,"降温时间表",1319],[5,"退火方法",1319],[15,"H",759],[15,"V",759],[15,"C",759],[15,"Z",759],[15,"Compound",763],[15,"DerivedComponent",763],[15,"BasicComponent",763],[15,"Reference",772],[15,"Xform",774],[15,"Xlit",774],[15,"Equal",778],[15,"Range",778],[15,"SVGStroke",782],[15,"ReferenceStroke",782],[15,"EqualRule",787],[15,"RangeRule",787],[15,"TrialMax",1360],[15,"BetterSolution",1360],[15,"TrialMin",1360],[15,"Progress",1360],[15,"Parameters",1360]],"r":[],"b":[[56,"impl-From%3CString%3E-for-%E9%94%99%E8%AF%AF"],[57,"impl-From%3C%26str%3E-for-%E9%94%99%E8%AF%AF"],[1144,"impl-Debug-for-TierMetric"],[1145,"impl-Display-for-TierMetric"],[1146,"impl-Display-for-PartialMetric"],[1147,"impl-Debug-for-PartialMetric"],[1148,"impl-Debug-for-Metric"],[1149,"impl-Display-for-Metric"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAKAENwABAAEABQADAAoAIAAuAAMAMwAAADUAAQA5AAEAQAAGAE4AAQBRAAMAVwAAAFoABQBhAB0AgAAQAJUAAACXAAAAmQAFAKAAJAHjAQoADAI3AUsDBABXAy4AiAMAAIoDBQCRAwQAlwMEAJ0DAACfAwAAowMBAKcDAQCsAwUAswMAALUDAQC4AwAAvQMBAMIDDgDUAwEA2QMeAPoDAwD/Aw8AEQQaAC8EAAAzBA8ARQQ7AIcEAQCPBDQAxQQAAMcECQDVBB8A/AQBAP8EHQAeBQAAIAUVADoFFQBRBQsA","P":[[13,"T"],[27,""],[31,"T"],[35,""],[48,"__D"],[50,""],[54,"T"],[56,""],[58,"T"],[63,""],[70,"U"],[77,""],[78,"FromWasmAbi::Abi"],[80,"LongRefFromWasmAbi::Abi,LongRefFromWasmAbi::Anchor"],[82,""],[83,"IntoWasmAbi::Abi"],[86,""],[89,"RefFromWasmAbi::Abi,RefFromWasmAbi::Anchor"],[90,"RefMutFromWasmAbi::Abi,RefMutFromWasmAbi::Anchor"],[91,""],[92,"__S"],[94,""],[96,"T"],[100,"U,T"],[107,"TryFromJsValue::Error"],[108,"U"],[115,""],[127,"VectorFromWasmAbi::Abi"],[128,"VectorIntoWasmAbi::Abi"],[129,""],[130,"V"],[137,""],[217,"T"],[281,""],[311,"T"],[341,""],[379,"__D"],[420,""],[452,"T"],[493,"U"],[526,""],[558,"__S"],[598,"T"],[629,"U,T"],[659,"U"],[691,""],[725,"V"],[791,""],[792,"T"],[806,""],[812,"T"],[818,""],[825,"__D"],[827,""],[835,"T"],[844,""],[847,"U"],[858,""],[860,"__S"],[865,"T"],[871,"U,T"],[878,"U"],[885,""],[892,"V"],[907,""],[964,"T"],[970,""],[971,"T"],[972,""],[976,"T"],[980,""],[981,"U"],[985,""],[992,"T"],[993,"U,T"],[996,"U"],[999,""],[1004,"V"],[1007,""],[1013,"T"],[1016,"U"],[1017,"U,T"],[1018,"U"],[1019,""],[1020,"V"],[1021,""],[1031,"T"],[1033,""],[1034,"T"],[1035,""],[1038,"T"],[1039,"U"],[1040,""],[1042,"T"],[1043,"U,T"],[1044,"U"],[1045,""],[1046,"V"],[1054,"T"],[1060,""],[1062,"T"],[1064,""],[1067,"T"],[1071,"U"],[1074,""],[1076,"T"],[1078,"U,T"],[1081,"U"],[1084,""],[1087,"V"],[1090,""],[1102,"T"],[1116,""],[1121,"T"],[1126,""],[1131,"__D"],[1141,""],[1152,"T"],[1158,""],[1160,"U"],[1176,"__S"],[1182,"T"],[1187,""],[1191,"U,T"],[1197,"U"],[1203,""],[1209,"V"],[1219,""],[1223,"T"],[1227,""],[1228,"T"],[1229,""],[1230,"__D"],[1231,""],[1232,"T"],[1234,"U"],[1239,"__S"],[1240,"T"],[1241,"U,T"],[1243,"U"],[1245,""],[1247,"V"],[1249,""],[1256,"T"],[1267,""],[1268,"T"],[1272,"U"],[1278,"U,T"],[1281,"U"],[1284,""],[1287,"V"],[1290,"E,O,F"],[1305,"T"],[1310,"U"],[1313,"U,T"],[1314,"U"],[1315,""],[1316,"V"],[1317,"E,O,F"],[1319,"T"],[1323,""],[1325,"T"],[1327,""],[1329,"__D"],[1331,""],[1333,"T"],[1335,"U"],[1340,"__S"],[1345,"T"],[1347,"U,T"],[1349,"U"],[1351,""],[1354,"V"],[1356,"E,O,F"]]}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[26887]}