var searchIndex = new Map(JSON.parse('[["chai",{"t":"PPPPPPPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONCOCNNNNONCNNNNNNNNNNNNNNNNNNNNNNNNNNNNONONNCCNCONNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNOOOMNNGFFFNGNKONONNOFPPFFPFPPFGPFPFPFFPFGFPFFFPPIFGPFPFFFGGFFFFFIPPFPPFGPFGPGPGFPPGPPPOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOONOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOONOOOOOOOOOOOONOOOOOOOOOOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOFOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNOONOONNNNNNNOOOONONNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOIIOIOONNNOFIOOIOFOONIOONOFNNSSOIONIFOOIFIOOOOOOFOIIOFONNNNNNNNNNOONNNNNNNNNCNNNNONNNNOONNNNNNNNNNOONNNONNNFOMKFFOOOONNNNNNNNNNFCCCRKMFNNNNNNNNNNNNNNNNNPPIFGPPNNNNNNONNNNNNONNNONNNNOONNNNNNNNNNNNNNNOONFIIFFFFFONNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNOOOOONNNNNNNNNOONNNNNNHHNNNNNNOOOOOOOOOOONNNNNONNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNOOFCKMKMSNNNNNNNNNNNNNOOONNNNNNNNNNNFNNNNFNNNNNNOOOOONNNNCNNNOOCNNNNNNNNNNNNMKFFJOOOONOOOFNNNONONOONNNNNFNNNNNNNNNNNNNNNNNNOOONNOOONNNNNNNNONNNNFFOOOOOOOOOOOOO","n":["BetterSolution","Elapsed","Encode","Optimize","Parameters","Progress","TrialMax","TrialMin","Web","augment_args","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","","","","","","","borrow_mut","","","","","","","clone","","","","clone_into","","","","clone_to_uninit","","","","command","","command_for_update","config","","data","default","describe","describe_vector","deserialize","encodables","encode_evaluate","encoders","fmt","","from","","","","","","","","","","from_abi","from_arg_matches","","from_arg_matches_mut","","group_id","has_subcommand","into","","","","","","","into_abi","is_none","key_distribution","long_ref_from_abi","message","new","none","objectives","operators","optimize","optimizers","pair_equivalence","ref_from_abi","ref_mut_from_abi","return_abi","serialize","","sync","threads","to_owned","","","","try_from","","","","","","","try_from_js_value","try_into","","","","","","","type_id","","","","","","","update_from_arg_matches","","update_from_arg_matches_mut","","validate","vector_from_abi","vector_into_abi","vector_into_jsvalue","vzip","","","","","","","准备数据","原始当量信息","原始键位分布信息","参数","发送","","","命令","命令行","命令行参数","图形界面参数","新建","消息","生成子命令行","界面","词列表","读取","输出目录","输出编码结果","输出评测指标","配置","错误","A","Advanced","AffinityList","Analysis","Ascii","AtomicConstraint","Basic","BasicComponent","Block","BoxConfig","C","CodableObjectConfig","Compound","ConstraintsConfig","Custom","Data","Degenerator","DerivedComponent","DiagramConfig","Draw","EdgeConfig","Element","ElementAffinityTarget","ElementWithIndex","EncoderConfig","Equal","EqualRule","FingeringWeights","FormConfig","Glyph","H","Info","Key","KeyAffinityTarget","LayoutRow","LevelWeights","Mapped","MappedKey","NodeConfig","ObjectiveConfig","OptimizationConfig","PartialWeights","PrimitiveCharacter","PrimitiveRepertoire","Range","RangeRule","Reading","Reference","ReferenceStroke","Regularization","Rule","SVGStroke","Scheme","ShortCodeConfig","SimulatedAnnealing","SolverConfig","SplicedComponent","Stroke","TierWeights","Uppercase","V","WordRule","Xform","Xlit","Z","affinity","","algebra","alphabet","ambiguous","analysis","author","auto_select_length","auto_select_pattern","borrow","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cell_style","character_set","characters_full","characters_short","classifier","clone","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_to_uninit","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","conditions","constraints","contents","count","customize","data","default","degenerator","description","deserialize","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","diagram","duplication","","element","","","element_affinities","element_indices","elements","encoder","extended_pair_equivalence","feature","fingering","","fmt","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","form","frequency","from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gb2312","gf0014_id","gf3001_id","glyph_customization","glyphs","grouping","importance","index","","","","indices","info","into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","key","","key_affinities","key_distribution","keys","","layout","length","","levels","","mapping","mapping_type","max_length","metaheuristic","name","","negative","next","no_cross","normalize","object","","objective","operator","optimization","pair_equivalence","pinyin","positive","prefix","priority_short_codes","reading_customization","readings","regularization","repertoire","rootIndex","row_style","rules","select_keys","","selector","serialize","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","serializer","short_code","source","sources","strength","strokeIndex","strokes","strong","subtype","tags","tiers","to","to_owned","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","top","try_from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","tygf","type","type_id","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","unicode","value","version","","vzip","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","weak","words_full","words_short","配置","mapping","match","style","","","","parameterList","","","","","operandList","","operator","","order","","source","strokes","","tags","","","","element","index","from","","to","","length_equal","length_in_range","schemes","","curveList","feature","","index","start","formula","","length_equal","length_in_range","borrow","","","","","","","borrow_mut","","","","","","","clone","","","","","","clone_into","","","","","","clone_to_uninit","","","","","","default","deserialize","","fmt","","","","","","","frequency","from","","","","","","","full","full_rank","get_space","gt_penalty","ideal","into","","","","","","","level","lt_penalty","name","","new","sequence","serialize","","","short","short_rank","to_owned","","","","","","try_from","","","","","","","try_into","","","","","","","type_id","","","","","","","vzip","","","","","","","上一个实际编码","上一个选重标记","元素","元素序列","","元素映射","元素转数字","全码","写入","写入编码","写入选重","初始映射","原始可编码对象","原始当量信息","原始编码","原始编码候选位置","原始键位分布信息","原始顺序","可编码对象","名称","实际编码","序列化","当量信息","","数字转元素","数字转编码","数字转键","数据","新建","更新配置","最大按键组合长度","最大词长","有变化","正则化","","生成码表","用指标记","码表项","简码","简码等级","编码","编码信息","自动上屏","词列表","词长","","进制","选择键","选重标记","部分编码信息","配置","键","键位分布信息","","键位分布损失函数","键转数字","预处理字母表","预处理当量信息","预处理指法标记","预处理映射","预处理正则化","预处理简码规则","预处理简码配置","预处理自动上屏","预处理词列表","预处理键位分布信息","频率","","borrow","","","borrow_mut","","","clone","clone_into","clone_to_uninit","default","fmt","from","","","hashmap","into","","","new","prefix","select_keys","to_owned","try_from","","","try_into","","","type_id","","","vector","vector_length","vzip","","","最大码长","查找数量","添加","生成编码","简码配置","简码配置列表","编码","编码器","编码空间","编码配置","自动上屏查找表","进制","选择键","首选键","borrow","borrow_mut","from","into","try_from","try_into","type_id","vzip","新建","编码","默认编码器","cache","default","metric","目标值","目标函数","计算","Cache","accumulate","borrow","borrow_mut","clone","clone_into","clone_to_uninit","finalize","fmt","from","into","new","process","to_owned","try_from","try_into","type_id","vzip","CharactersFull","CharactersShort","Frequencies","Parameters","PartialType","WordsFull","WordsShort","borrow","","","borrow_mut","","","buckets","clone","","clone_into","","clone_to_uninit","","fingering_types","from","","","ideal_distribution","into","","","is_characters","pair_equivalence","parameters","to_owned","","try_from","","","try_into","","","type_id","","","vzip","","","新建","正则化","正则化强度","计算","默认目标函数","FingeringMetric","FingeringMetricUniform","FingeringTypes","LevelMetric","LevelMetricUniform","PartialMetric","TierMetric","awkward_upside_down","borrow","","","","","","borrow_mut","","","","","","characters_full","characters_short","clone","","","","","clone_into","","","","","clone_to_uninit","","","","","deserialize","","","","","duplication","","extended_pair_equivalence","fingering","","fmt","","","","","","","","","frequency","","from","","","","","","get_fingering_types","get_partial_fingering_types","into","","","","","","key_distribution","length","","levels","","little_finger_interference","memory","pair_equivalence","same_finger_large_jump","same_finger_small_jump","same_hand","serialize","","","","","tiers","to_owned","","","","","to_string","","","top","try_from","","","","","","try_into","","","","","","type_id","","","","","","vzip","","","","","","words_full","words_short","默认指标","default","变异","","杂交","","DEFAULT_MUTATE","borrow","","borrow_mut","","clone","clone_into","clone_to_uninit","deserialize","fmt","from","","into","","random_full_key_swap","random_move","random_swap","serialize","to_owned","try_from","","try_into","","type_id","","vzip","","变异","变异配置","新建","有约束的整键随机交换","有约束的随机交换","有约束的随机移动","默认操作","borrow","","","borrow_mut","","","encode_assembly","encode_duplicate","encode_init","encode_reset","encode_short","fmt","from","","","genetic","into","","","objective_accept","objective_accumulate","simulated_annealing","try_from","","","try_into","","","type_id","","","vzip","","","优化","优化方法","优化结果","优化问题","全局计时器","分数","指标","操作","数据","新建","映射","目标函数","编码器","计时器","计算","borrow","borrow_mut","crossover_rate","from","generations","into","mutation_rate","population_size","try_from","try_into","type_id","vzip","优化","遗传算法","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","deserialize","","fmt","","from","","into","","parameters","report_after","search_method","serialize","","steps","t_max","t_min","to_owned","","try_from","","try_into","","type_id","","update_interval","vzip","","优化","调参","退火方法","降温时间表","accept_rate","config","improve_rate","metric","","save","steps","t_max","t_min","temperature","","","time"],"q":[[0,"chai"],[160,"chai::config"],[912,"chai::config::BoxConfig"],[918,"chai::config::Draw"],[923,"chai::config::Glyph"],[936,"chai::config::MappedKey"],[938,"chai::config::Rule"],[942,"chai::config::ShortCodeConfig"],[946,"chai::config::Stroke"],[951,"chai::config::WordRule"],[955,"chai::data"],[1130,"chai::encoders"],[1180,"chai::encoders::default"],[1191,"chai::objectives"],[1197,"chai::objectives::cache"],[1215,"chai::objectives::default"],[1265,"chai::objectives::metric"],[1390,"chai::operators"],[1395,"chai::operators::default"],[1429,"chai::optimizers"],[1478,"chai::optimizers::genetic"],[1492,"chai::optimizers::simulated_annealing"],[1533,"chai::消息"],[1546,"clap_builder::builder::command"],[1547,"core::result"],[1548,"serde::de"],[1549,"wasm_bindgen"],[1550,"core::fmt"],[1551,"std::io::error"],[1552,"alloc::string"],[1553,"clap_builder::parser::matches::arg_matches"],[1554,"clap_builder"],[1555,"clap_builder::util::id"],[1556,"core::option"],[1557,"js_sys"],[1558,"serde::ser"],[1559,"core::any"],[1560,"alloc::boxed"],[1561,"std::path"],[1562,"alloc::vec"],[1563,"core::clone"],[1564,"rustc_hash"]],"i":"Ch0n01111`l011D`hj5Ah453216045214521452145444`4`100140`213222216045045454532160450040200``0`40001604214532160450321604532160454545`00032160453113Dd41````4`4`244442`EfFl``Fj`1El``3`0`Ij``1```0```GfGj```6`2```````````10`4Eh``0``Id`5``48`Ff09HdHfInFhF`2EbFn01EdEf;EjElEn7FbFd>:FjFl9G`GbGdGfGhGjGlGnH`HbHdHfHhHlHnI`IbIdIfIhIjIlInEbEdEfEhEjElEnF`FbFdFfFhFjFlFnG`GbGdGfGhGjGlGnH`HbHdHfHhHlHnI`IbIdIfIhIjIlIn1Ed99FbEb2EfEhEjElEnF`7FdFfFhFjFlFnG`GbGdGfGhGjGlGnH`HbHdHfHhHlHnI`IbIdIfIhIjIlInEbEdEfEhEjElEnF`FbFdFfFhFjFlFnG`GbGdGfGhGjGlGnH`HbHdHfHhHlHnI`IbIdIfIhIjIlInEbEdEfEhEjElEnF`FbFdFfFhFjFlFnG`GbGdGfGhGjGlGnH`HbHdHfHhHlHnI`IbIdIfIhIjIlInFn52GhFb330Eb0EdEfEhEjElEnF`8FdFfFhFjFl?G`GbGdGfGhGjGlGnH`HbHdHfHhHlHnI`IbIdIfIhIjIlIn0?>=<79660>FdGnH`EbEdEfEhEjElEnF`Fb;FfFhFjFlFnG`GbGdGfGhGjGlGnH`HbHdHfHhHlHnI`IbIdIfIhIjIlIn0GlEbEdEfEhEjElEnF`FbFdFfFhFjFlFnG`GbGdGfGhGjGlGnH`HbHdHfHhHlHnI`IbIdIfIhIjIlIn:F`00Ed1FhEnEjGbHb>=7Eb6EfEh5El7:FbFdFf;FjFlFnG`<GdGfGhGjGlGnH`HbHdHfHhHlHnI`IbIdIfIhIjIlInG`<:?842FlGlGnH`Fh0Fn;EbF`GdGbFd:12If3=8En4Gh8Ed7Hn1G`Il<<4Fb<4EfEhEjEl:?4<FfFhFjFlFn;GbGdGfGhGjGlGnH`HbHdHfHhHlHnI`IbIdIfIhIjIlInFbFn20;G`Ej31EdH`HhEb3EfEh6ElEnF`<FdFfFhFjFlFnG`GbGdGfGhGjGlGnH`HbHdHfHhHlHnI`IbIdIfIhIjIlIn?EbEdEfEhEjElEnF`FbFdFfFhFjFlFnG`GbGdGfGhGjGlGnH`HbHdHfHhHlHnI`IbIdIfIhIjIlInEbEdEfEhEjElEnF`FbFdFfFhFjFlFnG`GbGdGfGhGjGlGnH`HbHdHfHhHlHnI`IbIdIfIhIjIlInF`G`EbEdEfEhEjElEn8FbFdFfFhFjFlFn>GbGdGfGhGjGlGnH`HbHdHfHhHlHnI`IbIdIfIhIjIlInF`GdEb30EdEfEhEjElEn8FbFdFfFhFjFlFnG`GbGdGfGhGjGlGnH`HbHdHfHhHlHnI`IbIdIfIhIjIlInFb99`A@bA@dA@fA@h23A@jA@lA@nAA`AAbAAdAAf1010AAhAAj10132AAl0AAnAB`10ABbABd10ABf0ABh01ABjABl10JdJfJhJjJlDjDb654321065432065432065432036565432106654321011055654321065612665111654320654321065432106543210654321033``4`023330``33`4`430`0000`00``3`00``24```042003`0``0`0000000000042LlLjLf210111`021012102001210210210112102112`2Ln```3333M`000000000````Md`0`Mf0000000000000000N`0```000MnMh210110101002100210201102102102102101001````````Nj0NdNfNhMlNb54321000432104321043210432102112154322110043543210``5432101432150155543210143210210254321054321054321054321000```Nl`Nn`ObO`1000000101000000101010101`1111`OjOhOd210000000210`21000`210210210210Of````33222322`2Ol000000000000`OnA@`1010101010101010000101111010101001000``ABnAC`ACbACd220ACf0421ACh","f":"`````````{bb}000{d{{d{c}}}{}}000000{{{d{f}}}{{d{fc}}}{}}000000{{{d{h}}}h}{{{d{j}}}j}{{{d{l}}}l}{{{d{n}}}n}{{d{d{fc}}}A`{}}000{{dAb}A`}000{{}b}`0```{{}j}{{}A`}0{c{{Ad{j}}}Af}`{{{d{Ah}}Aj}{{Ad{AjAl}}}}`{{{d{h}}{d{fAn}}}B`}{{{d{j}}{d{fAn}}}B`}{cc{}}{Bbh}1{Bdh}{{{d{Bf}}}h}33333{BhAh}{{{d{Bj}}}{{Ad{lBl}}}}{{{d{Bj}}}{{Ad{nBl}}}}{{{d{fBj}}}{{Ad{lBl}}}}{{{d{fBj}}}{{Ad{nBl}}}}{{}{{C`{Bn}}}}{{{d{Bf}}}Cb}{{}c{}}000000{AhBh}{{{d{c}}}Cb{}}`{ce{}{}}`{CdAh}{{}c{}}``{{{d{Ah}}}{{Ad{A`Al}}}}``{ce{}{}}{ce{}{}}{{}}{{{d{j}}c}AdCf}{{{d{Ch}}c}AdCf}{{{d{fAh}}Aj}{{Ad{A`Al}}}}`{dc{}}000{c{{Ad{e}}}{}{}}000000{Aj{{Ad{Ahc}}}{}}{{}{{Ad{c}}}{}}000000{dCj}000000{{{d{fl}}{d{Bj}}}{{Ad{A`Bl}}}}{{{d{fn}}{d{Bj}}}{{Ad{A`Bl}}}}{{{d{fl}}{d{fBj}}}{{Ad{A`Bl}}}}{{{d{fn}}{d{fBj}}}{{Ad{A`Bl}}}}{Aj{{Ad{AjAl}}}}{c{{Cn{{Cl{Ah}}}}}{}}{{{Cn{{Cl{Ah}}}}}c{}}{{{Cn{{Cl{Ah}}}}}Aj}{{}c{}}000000{{{d{D`}}}Db}```{{{d{Dd}}Ch}A`}{{{d{D`}}Ch}A`}{{{d{Ah}}Ch}A`}````{{l{C`{Df}}}D`}`{{{d{D`}}Dh}D`}``{{{d{Bf}}}Db}`{{{d{D`}}{Dl{Dj}}}A`}{{{d{D`}}c}A`{DnE`}}````````````````````````````````````````````````````````````````````````````{d{{d{c}}}{}}0000000000000000000000000000000000000{{{d{f}}}{{d{fc}}}{}}0000000000000000000000000000000000000`````{{{d{Eb}}}Eb}{{{d{Ed}}}Ed}{{{d{Ef}}}Ef}{{{d{Eh}}}Eh}{{{d{Ej}}}Ej}{{{d{El}}}El}{{{d{En}}}En}{{{d{F`}}}F`}{{{d{Fb}}}Fb}{{{d{Fd}}}Fd}{{{d{Ff}}}Ff}{{{d{Fh}}}Fh}{{{d{Fj}}}Fj}{{{d{Fl}}}Fl}{{{d{Fn}}}Fn}{{{d{G`}}}G`}{{{d{Gb}}}Gb}{{{d{Gd}}}Gd}{{{d{Gf}}}Gf}{{{d{Gh}}}Gh}{{{d{Gj}}}Gj}{{{d{Gl}}}Gl}{{{d{Gn}}}Gn}{{{d{H`}}}H`}{{{d{Hb}}}Hb}{{{d{Hd}}}Hd}{{{d{Hf}}}Hf}{{{d{{Hh{c}}}}}{{Hh{c}}}Hj}{{{d{Hl}}}Hl}{{{d{Hn}}}Hn}{{{d{I`}}}I`}{{{d{Ib}}}Ib}{{{d{Id}}}Id}{{{d{If}}}If}{{{d{Ih}}}Ih}{{{d{Ij}}}Ij}{{{d{Il}}}Il}{{{d{In}}}In}{{d{d{fc}}}A`{}}0000000000000000000000000000000000000{{dAb}A`}0000000000000000000000000000000000000``````{{}In}``{c{{Ad{Eb}}}Af}{c{{Ad{Ed}}}Af}{c{{Ad{Ef}}}Af}{c{{Ad{Eh}}}Af}{c{{Ad{Ej}}}Af}{c{{Ad{El}}}Af}{c{{Ad{En}}}Af}{c{{Ad{F`}}}Af}{c{{Ad{Fb}}}Af}{c{{Ad{Fd}}}Af}{c{{Ad{Ff}}}Af}{c{{Ad{Fh}}}Af}{c{{Ad{Fj}}}Af}{c{{Ad{Fl}}}Af}{c{{Ad{Fn}}}Af}{c{{Ad{G`}}}Af}{c{{Ad{Gb}}}Af}{c{{Ad{Gd}}}Af}{c{{Ad{Gf}}}Af}{c{{Ad{Gh}}}Af}{c{{Ad{Gj}}}Af}{c{{Ad{Gl}}}Af}{c{{Ad{Gn}}}Af}{c{{Ad{H`}}}Af}{c{{Ad{Hb}}}Af}{c{{Ad{Hd}}}Af}{c{{Ad{Hf}}}Af}{c{{Ad{{Hh{e}}}}}AfJ`}{c{{Ad{Hl}}}Af}{c{{Ad{Hn}}}Af}{c{{Ad{I`}}}Af}{c{{Ad{Ib}}}Af}{c{{Ad{Id}}}Af}{c{{Ad{If}}}Af}{c{{Ad{Ih}}}Af}{c{{Ad{Ij}}}Af}{c{{Ad{Il}}}Af}{c{{Ad{In}}}Af}``````````````{{{d{Eb}}{d{fAn}}}B`}{{{d{Ed}}{d{fAn}}}B`}{{{d{Ef}}{d{fAn}}}B`}{{{d{Eh}}{d{fAn}}}B`}{{{d{Ej}}{d{fAn}}}B`}{{{d{El}}{d{fAn}}}B`}{{{d{En}}{d{fAn}}}B`}{{{d{F`}}{d{fAn}}}B`}{{{d{Fb}}{d{fAn}}}B`}{{{d{Fd}}{d{fAn}}}B`}{{{d{Ff}}{d{fAn}}}B`}{{{d{Fh}}{d{fAn}}}B`}{{{d{Fj}}{d{fAn}}}B`}{{{d{Fl}}{d{fAn}}}B`}{{{d{Fn}}{d{fAn}}}B`}{{{d{G`}}{d{fAn}}}B`}{{{d{Gb}}{d{fAn}}}B`}{{{d{Gd}}{d{fAn}}}B`}{{{d{Gf}}{d{fAn}}}B`}{{{d{Gh}}{d{fAn}}}B`}{{{d{Gj}}{d{fAn}}}B`}{{{d{Gl}}{d{fAn}}}B`}{{{d{Gn}}{d{fAn}}}B`}{{{d{H`}}{d{fAn}}}B`}{{{d{Hb}}{d{fAn}}}B`}{{{d{Hd}}{d{fAn}}}B`}{{{d{Hf}}{d{fAn}}}B`}{{{d{{Hh{c}}}}{d{fAn}}}B`Jb}{{{d{Hl}}{d{fAn}}}B`}{{{d{Hn}}{d{fAn}}}B`}{{{d{I`}}{d{fAn}}}B`}{{{d{Ib}}{d{fAn}}}B`}{{{d{Id}}{d{fAn}}}B`}{{{d{If}}{d{fAn}}}B`}{{{d{Ih}}{d{fAn}}}B`}{{{d{Ij}}{d{fAn}}}B`}{{{d{Il}}{d{fAn}}}B`}{{{d{In}}{d{fAn}}}B`}``{cc{}}0000000000000000000000000000000000000``````````````{{}c{}}0000000000000000000000000000000000000```````{{{d{Fl}}}Dh}````````````{{{d{Fl}}}{{Dl{Fj}}}}````````````````````{{{d{Eb}}c}AdCf}{{{d{Ed}}c}AdCf}{{{d{Ef}}c}AdCf}{{{d{Eh}}c}AdCf}{{{d{Ej}}c}AdCf}{{{d{El}}c}AdCf}{{{d{En}}c}AdCf}{{{d{F`}}c}AdCf}{{{d{Fb}}c}AdCf}{{{d{Fd}}c}AdCf}{{{d{Ff}}c}AdCf}{{{d{Fh}}c}AdCf}{{{d{Fj}}c}AdCf}{{{d{Fl}}c}AdCf}{{{d{Fn}}c}AdCf}{{{d{G`}}c}AdCf}{{{d{Gb}}c}AdCf}{{{d{Gd}}c}AdCf}{{{d{Gf}}c}AdCf}{{{d{Gh}}c}AdCf}{{{d{Gj}}c}AdCf}{{{d{Gl}}c}AdCf}{{{d{Gn}}c}AdCf}{{{d{H`}}c}AdCf}{{{d{Hb}}c}AdCf}{{{d{Hd}}c}AdCf}{{{d{Hf}}c}AdCf}{{{d{{Hh{c}}}}e}AdE`Cf}{{{d{Hl}}c}AdCf}{{{d{Hn}}c}AdCf}{{{d{I`}}c}AdCf}{{{d{Ib}}c}AdCf}{{{d{Id}}c}AdCf}{{{d{If}}c}AdCf}{{{d{Ih}}c}AdCf}{{{d{Ij}}c}AdCf}{{{d{Il}}c}AdCf}{{{d{In}}c}AdCf}````````````{dc{}}0000000000000000000000000000000000000`{c{{Ad{e}}}{}{}}0000000000000000000000000000000000000{{}{{Ad{c}}}{}}0000000000000000000000000000000000000``{dCj}0000000000000000000000000000000000000````{{}c{}}0000000000000000000000000000000000000```````````````````````````````````````````````{d{{d{c}}}{}}000000{{{d{f}}}{{d{fc}}}{}}000000{{{d{Jd}}}Jd}{{{d{Jf}}}Jf}{{{d{Jh}}}Jh}{{{d{Jj}}}Jj}{{{d{Jl}}}Jl}{{{d{Db}}}Db}{{d{d{fc}}}A`{}}00000{{dAb}A`}00000{{}Jj}{c{{Ad{Jd}}}Af}{c{{Ad{Jf}}}Af}{{{d{Jd}}{d{fAn}}}B`}{{{d{Jf}}{d{fAn}}}B`}{{{d{Jh}}{d{fAn}}}B`}{{{d{Jj}}{d{fAn}}}B`}{{{d{Jl}}{d{fAn}}}B`}{{{d{Dj}}{d{fAn}}}B`}{{{d{Db}}{d{fAn}}}B`}`{cc{}}000000``{{{d{Db}}}Dh}``{{}c{}}000000````{{{d{Jh}}}Jl}`{{{d{Jd}}c}AdCf}{{{d{Jf}}c}AdCf}{{{d{Dj}}c}AdCf}``{dc{}}00000{c{{Ad{e}}}{}{}}000000{{}{{Ad{c}}}{}}000000{dCj}000000{{}c{}}000000````````{{{d{fJj}}JnCb}A`}{{{d{fJj}}Jn}A`}{{{d{fJj}}Cb}A`}``````````{{{d{Bd}}Dh}Bd}```{{JnK`{d{{Kf{KbKd}}}}}{{Dl{Kd}}}}``{{In{Dl{Jd}}KhKj}{{Ad{Dbh}}}}{{{d{Db}}{d{Kl}}}In}`````{{{d{Db}}{d{{Cl{Jl}}}}}{{Dl{Dj}}}}````````````````````{{{d{In}}}{{Ad{{Kn{K`{Dl{Kb}}{Kf{KdKb}}{Kf{KbKd}}}}h}}}}{{{d{Kj}}DhK`{d{{Kf{KbKd}}}}}{{Dl{L`}}}}{{{d{Db}}}{{Dl{Lb}}}}{{{d{In}}{d{{Kf{KdKb}}}}K`}{{Ad{{Kn{Kl{Kf{BdLd}}{Kf{LdBd}}}}h}}}}{{{d{Hl}}{d{{Kf{BdLd}}}}}{{Ad{{Kf{Ld{Dl{{Kn{LdL`}}}}}}h}}}}{{{d{Db}}{d{{Dl{Gh}}}}}{{Ad{{Dl{Lf}}h}}}}{{{d{Db}}{Dl{Gf}}}{{Ad{{Lh{{Dl{Lf}}}}h}}}}{{{d{Db}}}{{Ad{{Dl{Cb}}h}}}}{{{Dl{Jd}}Dh{d{{Kf{BdLd}}}}}{{Ad{{Dl{Jh}}h}}}}{{{d{Kh}}K`{d{{Kf{KbKd}}}}}{{Dl{Jf}}}}``{d{{d{c}}}{}}00{{{d{f}}}{{d{fc}}}{}}00{{{d{Lj}}}Lj}{{d{d{fc}}}A`{}}{{dAb}A`}`{{{d{Lf}}{d{fAn}}}B`}{cc{}}00`{{}c{}}00{{{d{Db}}}{{Ad{Llh}}}}``{dc{}}{c{{Ad{e}}}{}{}}00{{}{{Ad{c}}}{}}00{dCj}00``{{}c{}}00`{{{d{Lj}}K`}Ab}{{{d{fLj}}K`}A`}{{{d{Ll}}K`AbK`}K`}``{{{d{fLn}}{d{Kl}}{d{{C`{{Dl{Ld}}}}}}}{{d{f{Dl{Jl}}}}}}```````{d{{d{c}}}{}}{{{d{f}}}{{d{fc}}}{}}=<9876{{{d{Db}}}{{Ad{M`h}}}}{{{d{fM`}}{d{Kl}}{d{{C`{{Dl{Ld}}}}}}}{{d{f{Dl{Jl}}}}}}``````{{{d{f{Md{}{{Mb{c}}}}}}{d{f{Cl{Jl}}}}{d{Kl}}}{{Kn{cL`}}}{DnHjE`}}`{{{d{fMf}}DhK`JnCb{d{Mh}}Mj}A`}54{{{d{Mf}}}Mf}{{d{d{fc}}}A`{}}{{dAb}A`}{{{d{Mf}}{d{Mh}}}{{Kn{MlL`}}}}{{{d{Mf}}{d{fAn}}}B`}{cc{}}{{}c{}}{{{d{H`}}K`DhK`}Mf}{{{d{fMf}}DhK`{d{fJj}}{d{Mh}}}A`}{dc{}}{c{{Ad{e}}}{}{}}{{}{{Ad{c}}}{}}{dCj}{{}c{}}```````{d{{d{c}}}{}}00{{{d{f}}}{{d{fc}}}{}}00`{{{d{Mn}}}Mn}{{{d{Mh}}}Mh}{{d{d{fc}}}A`{}}0{{dAb}A`}0`>>>`==={{{d{N`}}}Cb}``;;:::999888777{{{d{Db}}}{{Ad{Mnh}}}}``{{{d{fMn}}{d{f{Cl{Jl}}}}{d{Kl}}}{{Kn{NbL`}}}}`````````888888777777``{{{d{Nd}}}Nd}{{{d{Nf}}}Nf}{{{d{Nh}}}Nh}{{{d{Ml}}}Ml}{{{d{Nb}}}Nb}9999988888{c{{Ad{Nd}}}Af}{c{{Ad{Nf}}}Af}{c{{Ad{Nh}}}Af}{c{{Ad{Ml}}}Af}{c{{Ad{Nb}}}Af}`````{{{d{Nj}}{d{fAn}}}B`}{{{d{Nd}}{d{fAn}}}B`}{{{d{Nf}}{d{fAn}}}B`}{{{d{Nh}}{d{fAn}}}B`}0{{{d{Ml}}{d{fAn}}}B`}0{{{d{Nb}}{d{fAn}}}B`}0``{cc{}}00000{{}Nj}{{{d{{Lh{{Dl{Kd}}}}}}}Nj}{{}c{}}00000```````````{{{d{Nd}}c}AdCf}{{{d{Nf}}c}AdCf}{{{d{Nh}}c}AdCf}{{{d{Ml}}c}AdCf}{{{d{Nb}}c}AdCf}`{dc{}}0000{dBd}00`{c{{Ad{e}}}{}{}}00000{{}{{Ad{c}}}{}}00000{dCj}00000{{}c{}}00000`````{{{d{fNl}}{d{fKl}}}{{Dl{Ld}}}}`{{{d{fNn}}{d{Kl}}{d{Kl}}}Kl}`{d{{d{c}}}{}}0{{{d{f}}}{{d{fc}}}{}}0{{{d{O`}}}O`}{{d{d{fc}}}A`{}}{{dAb}A`}{c{{Ad{O`}}}Af}{{{d{O`}}{d{fAn}}}B`}{cc{}}0{{}c{}}0```{{{d{O`}}c}AdCf}{dc{}}{c{{Ad{e}}}{}{}}0{{}{{Ad{c}}}{}}0{dCj}0{{}c{}}0{{{d{fOb}}{d{fKl}}}{{Dl{Ld}}}}`{{{d{Db}}}{{Ad{Obh}}}}{{{d{Ob}}{d{fKl}}}{{Dl{Ld}}}}00`{d{{d{c}}}{}}00{{{d{f}}}{{d{fc}}}{}}00`````{{{d{Od}}{d{fAn}}}B`}===`<<<```999888777666{{{d{Of}}{d{f{Oh{ceg}}}}{d{Dd}}}{{Oj{e}}}LnMd{}}````````{{Dbceg}{{Oh{ceg}}}LnMd{}}````{{{d{f{Oh{ceg}}}}{d{Kl}}{d{{C`{{Dl{Ld}}}}}}}{{Kn{L`}}}LnMd{}}54`{cc{}}`{{}c{}}``>=<;{{{d{Ol}}{d{f{Oh{ceg}}}}{d{Dd}}}{{Oj{e}}}LnMd{NlNn}}`8877{{{d{On}}}On}{{{d{A@`}}}A@`}{{d{d{fc}}}A`{}}0{{dAb}A`}0{c{{Ad{On}}}Af}{c{{Ad{A@`}}}Af}{{{d{On}}{d{fAn}}}B`}{{{d{A@`}}{d{fAn}}}B`}::99```{{{d{On}}c}AdCf}{{{d{A@`}}c}AdCf}```{dc{}}0{c{{Ad{e}}}{}{}}0{{}{{Ad{c}}}{}}0{dCj}0`{{}c{}}0{{{d{A@`}}{d{f{Oh{ceg}}}}{d{Dd}}}{{Oj{e}}}LnMdNl}{{{d{A@`}}{d{f{Oh{ceg}}}}{d{Dd}}}OnLnMdNl}```````````````","D":"AIh","p":[[5,"Command",1546],[1,"reference",null,null,1],[0,"mut"],[5,"错误",0],[5,"图形界面参数",0],[5,"命令行参数",0],[6,"命令",0],[1,"unit"],[1,"u8"],[6,"Result",1547,null,1],[10,"Deserializer",1548],[5,"Web",0],[5,"JsValue",1549],[5,"JsError",1549],[5,"Formatter",1550],[8,"Result",1550],[5,"Error",1551],[5,"String",1552],[1,"str"],[1,"u32"],[5,"ArgMatches",1553],[8,"Error",1554],[5,"Id",1555],[6,"Option",1556,null,1],[1,"bool"],[5,"Function",1557],[10,"Serializer",1558],[6,"消息",0],[5,"TypeId",1559],[1,"slice"],[5,"Box",1560,null,1],[5,"命令行",0],[5,"数据",955],[10,"界面",0],[5,"PathBuf",1561],[1,"usize"],[5,"码表项",955],[5,"Vec",1562],[10,"Display",1550],[10,"Serialize",1558],[5,"Info",160],[5,"Data",160],[6,"Draw",160],[6,"Stroke",160],[5,"Block",160],[6,"Glyph",160],[5,"Reading",160],[5,"PrimitiveCharacter",160],[5,"Analysis",160],[5,"Degenerator",160],[6,"Rule",160],[5,"FormConfig",160],[6,"MappedKey",160],[6,"Mapped",160],[5,"EncoderConfig",160],[5,"CodableObjectConfig",160],[5,"NodeConfig",160],[5,"EdgeConfig",160],[6,"ShortCodeConfig",160],[5,"Scheme",160],[6,"WordRule",160],[5,"LevelWeights",160],[5,"TierWeights",160],[5,"PartialWeights",160],[5,"ElementWithIndex",160],[5,"ElementAffinityTarget",160],[5,"KeyAffinityTarget",160],[5,"AffinityList",160],[10,"Clone",1563],[5,"Regularization",160],[5,"ObjectiveConfig",160],[5,"AtomicConstraint",160],[5,"ConstraintsConfig",160],[6,"SolverConfig",160],[5,"OptimizationConfig",160],[5,"LayoutRow",160],[6,"BoxConfig",160],[5,"DiagramConfig",160],[5,"配置",160],[10,"Deserialize",1548],[10,"Debug",1550],[5,"原始可编码对象",955],[5,"键位分布损失函数",955],[5,"可编码对象",955],[5,"部分编码信息",955],[5,"编码信息",955],[8,"编码",955],[1,"u64"],[8,"键",955],[1,"char"],[8,"FxHashMap",1564],[8,"原始键位分布信息",955],[8,"原始当量信息",955],[8,"元素映射",955],[1,"tuple",null,null,1],[1,"f64"],[8,"用指标记",955],[8,"元素",955],[5,"简码配置",1130],[1,"array"],[5,"编码空间",1130],[5,"编码配置",1130],[10,"编码器",1130],[5,"默认编码器",1180],[17,"目标值"],[10,"目标函数",1191],[5,"Cache",1197],[5,"Parameters",1215],[1,"i64"],[5,"PartialMetric",1265],[5,"默认目标函数",1215],[6,"PartialType",1215],[5,"默认指标",1265],[5,"LevelMetric",1265],[5,"LevelMetricUniform",1265],[5,"TierMetric",1265],[5,"FingeringTypes",1265],[10,"变异",1390],[10,"杂交",1390],[5,"变异配置",1395],[5,"默认操作",1395],[5,"计时器",1429],[10,"优化方法",1429],[5,"优化问题",1429],[5,"优化结果",1429],[5,"遗传算法",1478],[5,"降温时间表",1492],[5,"退火方法",1492],[15,"Custom",912],[15,"Element",912],[15,"Key",912],[15,"Uppercase",912],[15,"H",918],[15,"V",918],[15,"C",918],[15,"Z",918],[15,"A",918],[15,"SplicedComponent",923],[15,"Compound",923],[15,"DerivedComponent",923],[15,"BasicComponent",923],[15,"Reference",936],[15,"Xform",938],[15,"Xlit",938],[15,"Equal",942],[15,"Range",942],[15,"SVGStroke",946],[15,"ReferenceStroke",946],[15,"EqualRule",951],[15,"RangeRule",951],[15,"TrialMax",1533],[15,"BetterSolution",1533],[15,"TrialMin",1533],[15,"Progress",1533],[15,"Parameters",1533],[15,"Elapsed",1533]],"r":[],"b":[[55,"impl-From%3CError%3E-for-%E9%94%99%E8%AF%AF"],[57,"impl-From%3CString%3E-for-%E9%94%99%E8%AF%AF"],[58,"impl-From%3C%26str%3E-for-%E9%94%99%E8%AF%AF"],[1315,"impl-Display-for-TierMetric"],[1316,"impl-Debug-for-TierMetric"],[1317,"impl-Debug-for-PartialMetric"],[1318,"impl-Display-for-PartialMetric"],[1319,"impl-Debug-for-%E9%BB%98%E8%AE%A4%E6%8C%87%E6%A0%87"],[1320,"impl-Display-for-%E9%BB%98%E8%AE%A4%E6%8C%87%E6%A0%87"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAD4FOQABAAEABQADAAoAIAAuAAMAMwAAADUAAQA4AAAAOgABAEEABgBPAAEAUgADAFgAAABbAAUAYgAdAIEAEACWAAAAmAAAAJoABQChAHEBOQINAG0CeQHuAwQA+gMuACsEAAAtBAUANAQEADoEBQBBBAAAQwQAAEcEAwBNBAEAUgQFAFkEAABbBAEAXgQAAGMEAgBpBAwAeQQAAH0EIQChBAMApgQQALkEGwDYBAAA3AQQAO4EAQDxBDoAMgUBADoFNgByBQAAdAUJAIIFHwCpBQEArAUdAMsFAADNBRUA5wUVAP4FDAA=","P":[[13,"T"],[27,""],[31,"T"],[35,""],[48,"__D"],[50,""],[54,"T"],[55,""],[56,"T"],[57,""],[59,"T"],[64,""],[71,"U"],[78,""],[79,"FromWasmAbi::Abi"],[81,"LongRefFromWasmAbi::Abi,LongRefFromWasmAbi::Anchor"],[83,""],[84,"IntoWasmAbi::Abi"],[87,""],[90,"RefFromWasmAbi::Abi,RefFromWasmAbi::Anchor"],[91,"RefMutFromWasmAbi::Abi,RefMutFromWasmAbi::Anchor"],[92,""],[93,"__S"],[95,""],[97,"T"],[101,"U,T"],[108,"TryFromJsValue::Error"],[109,"U"],[116,""],[128,"VectorFromWasmAbi::Abi"],[129,"VectorIntoWasmAbi::Abi"],[130,""],[131,"V"],[138,""],[157,"M"],[234,"T"],[315,""],[342,"T"],[343,""],[353,"T"],[391,""],[438,"__D"],[465,"__D,T"],[466,"__D"],[490,""],[517,"T"],[518,""],[530,"T"],[582,"U"],[627,""],[661,"__S"],[688,"T,__S"],[689,"__S"],[711,"T"],[750,"U,T"],[788,"U"],[828,""],[870,"V"],[955,"T"],[969,""],[975,"T"],[981,""],[988,"__D"],[990,""],[998,"T"],[1007,""],[1010,"U"],[1021,""],[1023,"__S"],[1028,"T"],[1034,"U,T"],[1041,"U"],[1048,""],[1055,"V"],[1070,""],[1130,"T"],[1136,""],[1137,"T"],[1138,""],[1141,"T"],[1145,"U"],[1148,""],[1151,"T"],[1152,"U,T"],[1155,"U"],[1158,""],[1163,"V"],[1167,""],[1180,"T"],[1183,"U"],[1184,"U,T"],[1185,"U"],[1186,""],[1187,"V"],[1188,""],[1196,"目标函数::目标值"],[1198,""],[1199,"T"],[1201,""],[1202,"T"],[1203,""],[1206,"T"],[1207,"U"],[1208,""],[1210,"T"],[1211,"U,T"],[1212,"U"],[1213,""],[1214,"V"],[1222,"T"],[1229,""],[1231,"T"],[1233,""],[1236,"T"],[1240,"U"],[1243,""],[1246,"T"],[1248,"U,T"],[1251,"U"],[1254,""],[1257,"V"],[1260,""],[1273,"T"],[1287,""],[1292,"T"],[1297,""],[1302,"__D"],[1312,""],[1323,"T"],[1329,""],[1331,"U"],[1348,"__S"],[1354,"T"],[1359,""],[1363,"U,T"],[1369,"U"],[1375,""],[1381,"V"],[1392,""],[1396,"T"],[1400,""],[1401,"T"],[1402,""],[1403,"__D"],[1404,""],[1405,"T"],[1407,"U"],[1412,"__S"],[1413,"T"],[1414,"U,T"],[1416,"U"],[1418,""],[1420,"V"],[1422,""],[1429,"T"],[1440,""],[1441,"T"],[1445,"U"],[1451,"U,T"],[1454,"U"],[1457,""],[1460,"V"],[1463,"E,O,F"],[1478,"T"],[1483,"U"],[1486,"U,T"],[1487,"U"],[1488,""],[1489,"V"],[1490,"E,O,F"],[1492,"T"],[1496,""],[1498,"T"],[1500,""],[1502,"__D"],[1504,""],[1506,"T"],[1508,"U"],[1513,"__S"],[1518,"T"],[1520,"U,T"],[1522,"U"],[1524,""],[1527,"V"],[1529,"E,O,F"]]}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[30015]}